name: Deploy to Firebase

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to Firebase
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    env:
      NEXT_PUBLIC_FIREBASE_CONFIG: ${{ secrets.NEXT_PUBLIC_FIREBASE_CONFIG }}
      NEXT_PUBLIC_GCP_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_GCP_PROJECT_ID }}
      NEXT_PUBLIC_GCP_REGION: ${{ secrets.NEXT_PUBLIC_GCP_REGION }}
      NEXT_PUBLIC_USE_CLOUD_FUNCTIONS: ${{ secrets.NEXT_PUBLIC_USE_CLOUD_FUNCTIONS || 'true' }}
      NEXT_PUBLIC_LINE_CHANNEL_ID: ${{ secrets.NEXT_PUBLIC_LINE_CHANNEL_ID }}
      GOOGLE_APPLICATION_CREDENTIALS: /tmp/service_account.json
      LINE_CHANNEL_ID: ${{ secrets.LINE_CHANNEL_ID }}
      LINE_CHANNEL_SECRET: ${{ secrets.LINE_CHANNEL_SECRET }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Setup Firebase CLI
        run: npm install -g firebase-tools

      - name: Prepare GCP credentials
        run: |
          echo "${{ secrets.GCP_SA_KEY }}" | base64 --decode > /tmp/service_account.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=/tmp/service_account.json" >> $GITHUB_ENV
      
      - name: Enable Firebase Experiments
        run: firebase experiments:enable webframeworks --project=${{ secrets.NEXT_PUBLIC_GCP_PROJECT_ID }}

      - name: Debug Firebase Authentication
        run: |
          echo "GOOGLE_APPLICATION_CREDENTIALS=$GOOGLE_APPLICATION_CREDENTIALS"
          echo "Service account file exists: $(test -f $GOOGLE_APPLICATION_CREDENTIALS && echo 'yes' || echo 'no')"
          firebase projects:list

      - name: Deploy to Firebase Hosting
        run: firebase deploy --only hosting --project=${{ secrets.NEXT_PUBLIC_GCP_PROJECT_ID }}
      
      - name: Build Cloud Functions
        working-directory: ./functions
        run: |
          npm install
          npm run build
      
      - name: Set Cloud Functions Environment Variables
        run: |
          firebase functions:config:set \
            line.channel_id="${{ secrets.LINE_CHANNEL_ID }}" \
            line.channel_secret="${{ secrets.LINE_CHANNEL_SECRET }}" \
            --project=${{ secrets.NEXT_PUBLIC_GCP_PROJECT_ID }}
      
      - name: Deploy Cloud Functions (with retry)
        run: |
          max_attempts=3
          attempt=1
          while [ $attempt -le $max_attempts ]; do
            echo "Attempt $attempt of $max_attempts"
            if firebase deploy --only functions --project=${{ secrets.NEXT_PUBLIC_GCP_PROJECT_ID }}; then
              echo "Functions deployment successful"
              exit 0
            else
              echo "Functions deployment failed on attempt $attempt"
              if [ $attempt -eq $max_attempts ]; then
                echo "All attempts failed. Deploying without functions..."
                firebase deploy --except functions --project=${{ secrets.NEXT_PUBLIC_GCP_PROJECT_ID }}
                echo "::warning::Cloud Functions deployment failed but hosting was deployed successfully"
                exit 0
              fi
              echo "Waiting 60 seconds before retry..."
              sleep 60
              attempt=$((attempt + 1))
            fi
          done